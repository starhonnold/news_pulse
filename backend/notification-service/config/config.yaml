# Notification Service Configuration
# Конфигурация сервиса уведомлений

server:
  port: 8084
  host: "0.0.0.0"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s

# Health check сервер
health:
  port: 8094
  path: "/health"

# Metrics сервер
metrics:
  enabled: true
  port: 9094
  path: "/metrics"

# Подключение к PostgreSQL
database:
  host: "postgres"
  port: 5432
  name: "news_pulse"
  user: "news_pulse_user"
  password: "news_pulse_secure_password_2024"
  
  # Параметры подключения
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: "5m"
  conn_max_idle_time: "1m"
  
  # SSL настройки
  ssl_mode: "disable"  # В production использовать require

# Настройки уведомлений
notifications:
  # Максимальное количество уведомлений на пользователя
  max_notifications_per_user: 1000
  
  # Время жизни уведомлений (в днях)
  notification_ttl_days: 30
  
  # Максимальная длина текста уведомления
  max_notification_text: 500
  
  # Автоудаление старых уведомлений
  auto_cleanup_enabled: true
  auto_cleanup_interval: "24h"
  
  # Типы уведомлений
  types:
    news_alert: "Новостное оповещение"
    pulse_update: "Обновление пульса"
    system_message: "Системное сообщение"
    user_mention: "Упоминание пользователя"

# WebSocket настройки для связи с API Gateway
websocket:
  # URL API Gateway для WebSocket соединений
  gateway_url: "ws://api-gateway:8080/ws"
  
  # Настройки соединения
  connect_timeout: 10s
  read_timeout: 60s
  write_timeout: 10s
  
  # Переподключение при обрыве
  reconnect_enabled: true
  reconnect_interval: 5s
  max_reconnect_attempts: 10
  
  # Heartbeat
  ping_interval: 30s
  pong_timeout: 10s

# Интеграция с микросервисами
services:
  # News Management Service
  news_management:
    url: "http://news-management-service:8082"
    timeout: 10s
    
  # Pulse Service  
  pulse:
    url: "http://pulse-service:8083"
    timeout: 10s

# Push уведомления (будущая функциональность)
push_notifications:
  enabled: false
  
  # Firebase Cloud Messaging
  fcm:
    enabled: false
    server_key: ""
    project_id: ""
    
  # Apple Push Notification Service
  apns:
    enabled: false
    key_file: ""
    key_id: ""
    team_id: ""
    
  # Web Push
  web_push:
    enabled: false
    vapid_public_key: ""
    vapid_private_key: ""

# Email уведомления (будущая функциональность)
email_notifications:
  enabled: false
  
  smtp:
    host: ""
    port: 587
    username: ""
    password: ""
    from_email: "notifications@news-pulse.com"
    from_name: "Пульс Новостей"
    
  templates:
    news_digest: "templates/news_digest.html"
    pulse_summary: "templates/pulse_summary.html"

# SMS уведомления (будущая функциональность)
sms_notifications:
  enabled: false
  
  provider: "twilio"  # twilio, nexmo, sms_ru
  
  twilio:
    account_sid: ""
    auth_token: ""
    from_number: ""
    
  sms_ru:
    api_id: ""

# Шаблоны уведомлений
templates:
  news_alert:
    title: "Новая важная новость"
    body: "{{.Title}}\n\n{{.Summary}}"
    
  pulse_update:
    title: "Обновление пульса \"{{.PulseName}}\""
    body: "Найдено {{.NewsCount}} новых новостей по вашим критериям"
    
  system_message:
    title: "Системное уведомление"
    body: "{{.Message}}"

# Настройки обработки событий
events:
  # Размер буфера для входящих событий
  buffer_size: 1000
  
  # Количество воркеров для обработки событий
  worker_count: 5
  
  # Таймаут обработки одного события
  processing_timeout: 30s
  
  # Retry настройки для неудачных уведомлений
  retry:
    enabled: true
    max_attempts: 3
    initial_delay: 1s
    max_delay: 30s
    multiplier: 2.0

# Логирование
logging:
  level: "info"  # debug, info, warn, error
  format: "json" # json, text
  output: "stdout" # stdout, file
  file_path: "/var/log/notification-service.log"
  
  # Логирование уведомлений
  log_notifications: true
  
  # Логирование медленных операций (в миллисекундах)
  slow_operation_threshold: 1000

# Настройки для разных окружений
environments:
  development:
    logging:
      level: "debug"
    notifications:
      auto_cleanup_enabled: false
    push_notifications:
      enabled: false
    email_notifications:
      enabled: false
      
  production:
    logging:
      level: "warn"
    database:
      ssl_mode: "require"
    notifications:
      auto_cleanup_enabled: true
